{"version":3,"file":"commonHelpers.js","sources":["../src/js/localStorage.js","../src/js/shopping-list.js"],"sourcesContent":["export class LocalStorage {\n    constructor () {\n        this.keyName = 'shopping-list';\n    }\n    \n    // Повертає пустий массив якщо сховище пусте. Або повертає массив обьектів з книгами\n    getProducts() {\n        const productsLocalStorage = localStorage.getItem(this.keyName);\n        if (productsLocalStorage !== null) {\n            return JSON.parse(productsLocalStorage);\n        }\n        return [];\n    }\n\n    // Перевіряє чи книга є в локальному сховищі\n    // Повертає true якщо є книга чи false якщо немає\n    checkProduct(id) {\n        let products = this.getProducts();\n        let index = products.findIndex(item => item.id == id);\n        const obj = {\n            hasProd: false,\n            index: index,\n            arrProd: products\n        }\n        if(index !== -1) {\n            obj.hasProd = true;\n        }\n            return obj;\n    }\n\n    // Додає/видаляє книгу з сховища\n    // З модалки передавати обєкт з інфо про книгу\n    // З shoppingList для видалення передавати обєкт з id типу {id: '155451558'}\n    putProducts(books) {\n        let {hasProd, index, arrProd} = this.checkProduct(books.id);\n        if(hasProd !== true) {\n            arrProd.push(books);\n        } else {\n            arrProd.splice(index, 1);\n        } \n        localStorage.setItem(this.keyName, JSON.stringify(arrProd));\n    }\n}","import { LocalStorage } from '../js/localStorage';\n\n// Створюємо екземпляр класу LocalStorage\nconst storage = new LocalStorage();\n\n// Отримуємо збережені книги з localStorage\nconst savedBooks = storage.getProducts();\n\n// Відображаємо книги на сторінці Shopping list\nfunction displayBooks() {\n    const bookList = document.getElementById('bookList');\n\n    // Очищаємо список перед відображенням книг\n    bookList.innerHTML = '';\n\n    // Перевірка, чи є дані у localStorage або він доступний\n    if (savedBooks.length === 0 || !localStorage) {\n        // Якщо localStorage порожній або недоступний, відображаємо статичне зображення\n        bookList.innerHTML = `\n            <li>\n                <picture>\n                    <source srcset=\"../images/shopping-list/placeholder.webp\" type=\"image/webp\">\n                    <source srcset=\"../images/shopping-list/placeholder.png\" type=\"image/png\">\n                    <img src=\"../images/shopping-list/placeholder.png\" alt=\"No Books Added\">\n                </picture>\n            </li>`;\n        return;\n    }\n\n    // Створюємо елементи DOM для кожної книги за допомогою методу map\n    const bookElements = savedBooks.map(book => {\n        const li = document.createElement('li');\n        li.classList.add('book-card');\n\n        const bookDetails = `\n            <img class=\"book-cover-img\" src=\"${book.book_image}\" alt=\"Book Cover\">\n            <div class=\"book-info\">\n                <h2 class=\"book-name-title\">${book.title}</h2>\n                <p class=\"book-name-category\">${book.list_name}</p>\n                <p class=\"book-short-description\">${book.description}</p>\n                <div class=\"book-author-link\">\n                    <p class=\"author-full-name\">${book.author}</p>\n                    <a class=\"link\" href=\"${book.amazon_product_url}\">\n                        <img class=\"icon-link\" src=\"../images/shopping-list/amazon-icon.svg\" width=\"32px\" height=\"11px\" alt=\"Amazon\">\n                    </a>\n                    <a class=\"link\" href=\"${book.buy_links[1].url}\">\n                        <img class=\"icon-link\" src=\"../images/shopping-list/аpple-icon.svg\" width=\"16px\" height=\"16px\" alt=\"Apple Books\">\n                    </a>\n                </div>\n                <button class=\"remove-book\">\n                    <img class=\"del-icon\" src=\"../images/shopping-list/trash-03.svg\" alt=\"Delete\">\n                </button>\n            </div>`;\n\n        li.innerHTML = bookDetails;\n        return li;\n    });\n\n    // Додаємо всі елементи до списку книг\n    bookElements.forEach(bookElement => {\n        bookList.appendChild(bookElement);\n    });\n}\n\n// Викликаємо функцію для відображення книг при завантаженні сторінки\ndisplayBooks();\n"],"names":["LocalStorage","productsLocalStorage","id","products","index","item","obj","books","hasProd","arrProd","storage","savedBooks","displayBooks","bookList","book","li","bookDetails","bookElement"],"mappings":"uCAAO,MAAMA,CAAa,CACtB,aAAe,CACX,KAAK,QAAU,eAClB,CAGD,aAAc,CACV,MAAMC,EAAuB,aAAa,QAAQ,KAAK,OAAO,EAC9D,OAAIA,IAAyB,KAClB,KAAK,MAAMA,CAAoB,EAEnC,EACV,CAID,aAAaC,EAAI,CACb,IAAIC,EAAW,KAAK,cAChBC,EAAQD,EAAS,UAAUE,GAAQA,EAAK,IAAMH,CAAE,EACpD,MAAMI,EAAM,CACR,QAAS,GACT,MAAOF,EACP,QAASD,CACZ,EACD,OAAGC,IAAU,KACTE,EAAI,QAAU,IAEPA,CACd,CAKD,YAAYC,EAAO,CACf,GAAI,CAAC,QAAAC,EAAS,MAAAJ,EAAO,QAAAK,CAAO,EAAI,KAAK,aAAaF,EAAM,EAAE,EACvDC,IAAY,GACXC,EAAQ,KAAKF,CAAK,EAElBE,EAAQ,OAAOL,EAAO,CAAC,EAE3B,aAAa,QAAQ,KAAK,QAAS,KAAK,UAAUK,CAAO,CAAC,CAC7D,CACL,CCvCA,MAAMC,EAAU,IAAIV,EAGdW,EAAaD,EAAQ,cAG3B,SAASE,GAAe,CACpB,MAAMC,EAAW,SAAS,eAAe,UAAU,EAMnD,GAHAA,EAAS,UAAY,GAGjBF,EAAW,SAAW,GAAK,CAAC,aAAc,CAE1CE,EAAS,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQrB,MACH,CAGoBF,EAAW,IAAIG,GAAQ,CACxC,MAAMC,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,UAAU,IAAI,WAAW,EAE5B,MAAMC,EAAc;AAAA,+CACmBF,EAAK,UAAU;AAAA;AAAA,8CAEhBA,EAAK,KAAK;AAAA,gDACRA,EAAK,SAAS;AAAA,oDACVA,EAAK,WAAW;AAAA;AAAA,kDAElBA,EAAK,MAAM;AAAA,4CACjBA,EAAK,kBAAkB;AAAA;AAAA;AAAA,4CAGvBA,EAAK,UAAU,CAAC,EAAE,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASzD,OAAAC,EAAG,UAAYC,EACRD,CACf,CAAK,EAGY,QAAQE,GAAe,CAChCJ,EAAS,YAAYI,CAAW,CACxC,CAAK,CACL,CAGAL,EAAc"}