{"version":3,"file":"commonHelpers.js","sources":["../src/js/header.js","../src/js/fetchAPI.js","../src/js/categories.js","../src/js/homePage.js","../src/js/localStorage.js","../src/js/pop-up.js","../src/main.js"],"sourcesContent":["function theme() {\n    const toggleTheme = document.querySelector('.toggle-theme')\n    let el = document.documentElement\n\n    toggleTheme.addEventListener('click', (event) => {\n        event.preventDefault();\n        if (el.hasAttribute('data-theme')) {\n            el.removeAttribute('data-theme')\n            localStorage.removeItem('theme')\n        } else {\n            el.setAttribute('data-theme', 'dark')\n            localStorage.setItem('theme', 'dark')\n        }\n    })\n\n    if (localStorage.getItem('theme') !== null) {\n        el.setAttribute('data-theme', 'dark')\n    }\n};\n\ntheme();","import axios from 'axios';\n\naxios.defaults.baseURL = `https://books-backend.p.goit.global/books`;\n\nconst backendAPI = {\n  getCategoryList: async function () {\n    try {\n      const response = await axios.get(`/category-list`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  getBestSellers: async function () {\n    try {\n      const response = await axios.get(`/top-books`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  getCategory: async function (selected) {\n    try {\n      const response = await axios.get(`/category?category=${selected}`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  getBookID: async function (id) {\n    try {\n      const response = await axios.get(`${id}`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n};\n\nexport default backendAPI;\n","import backendAPI from './fetchAPI';\n\nconst categorySelectors = {\n  categoryContainer: document.querySelector('.category-container'),\n  categoryList: document.querySelector('.category-list'),\n  categoryItem: document.querySelector('.category-item'),\n  allCategory: document.querySelector('.all-category'),\n};\n\nfunction categoryMarkup(data) {\n  const result = data\n    .map(item =>\n      `<li data-category=\"${item.list_name}\" class='category-item'>${item.list_name}</li>`)\n    .join('');\n  return result;\n}\n\nasync function loadCategory(categoryName) {\n  console.log('Loading category:', categoryName);\n  try {\n    const categoryData = await backendAPI.getCategoryList(categoryName);\n    renderCategoryPage(categoryData);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction renderCategoryPage(data) {\n  \n}\n\n(async () => {\n  try {\n    const categoryData = await backendAPI.getCategoryList();\n    const markup = categoryMarkup(categoryData);\n    categorySelectors.categoryList.innerHTML = markup;\n    \n    categorySelectors.categoryList.addEventListener('click', (event) => {\n      if (event.target.classList.contains('category-item')) {\n        const categoryName = event.target.dataset.category;\n        loadCategory(categoryName);\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n})();","import backendAPI from './fetchAPI';\n\nexport const renderBestBooks = async () => {\n  const bestBooksList = document.querySelector('.bestsellers-list');\n  try {\n    const bestSellersData = await backendAPI.getBestSellers();\n    const markup = bestSellersData\n      .map(({ books, list_name }) => {\n        return `<li class=\"bestsellers-item\">\n             <h2 class=\"bestsellers-category-title\">${list_name}</h2>\n                <ul class=\"bestsellers-books-list\"> \n                    ${books\n                      .map(({ book_image, title, author }) => {\n                        // if(){}else{}\n                        return `<li class=\"bestsellers-books-item\">\n                            <img class=\"bestsellers-books-img\" src='${book_image}' alt=\"\" />\n                            <h3 class=\"bestsellers-book-title\">${title}</h3>\n                            <p class=\"bestsellers-book-author\">${author}</p>\n                        </li>`;\n                      })\n                      .join('\\n')}\n                </ul>\n                <button class=\"bestsellers-btn\" type=\"button\">See more</button>\n            </li>`;\n      })\n      .join('\\n');\n\n    bestBooksList.insertAdjacentHTML('beforeend', markup);\n  } catch (error) {\n    console.error('Error fetching Best sellers:', error);\n  }\n};\n\nrenderBestBooks();\n","export class LocalStorage {\n    constructor () {\n        this.keyName = 'shopping-list';\n    }\n    \n    // Повертає пустий массив якщо сховище пусте. Або повертає массив обьектів з книгами\n    getProducts() {\n        const productsLocalStorage = localStorage.getItem(this.keyName);\n        if (productsLocalStorage !== null) {\n            return JSON.parse(productsLocalStorage);\n        }\n        return [];\n    }\n\n    // Перевіряє чи книга є в локальному сховищі\n    // Повертає true якщо є книга чи false якщо немає\n    checkProduct(id) {\n        let products = this.getProducts();\n        let index = products.findIndex(item => item.id == id);\n        const obj = {\n            hasProd: false,\n            index: index,\n            arrProd: products\n        }\n        if(index !== -1) {\n            obj.hasProd = true;\n        }\n            return obj;\n    }\n\n    // Додає/видаляє книгу з сховища\n    // З модалки передавати обєкт з інфо про книгу\n    // З shoppingList для видалення передавати обєкт з id типу {id: '155451558'}\n    putProducts(books) {\n        let {hasProd, index, arrProd} = this.checkProduct(books.id);\n        if(hasProd !== true) {\n            arrProd.push(books);\n        } else {\n            arrProd.splice(index, 1);\n        } \n        localStorage.setItem(this.keyName, JSON.stringify(arrProd));\n    }\n}","import { LocalStorage } from './localStorage.js';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const modal = document.getElementById('modal');\n  const closeButton = document.querySelector('.close');\n  const addToCartButton = document.querySelector('.add-to-cart');\n  \n  const localStorageInstance = new LocalStorage();\n  \n  function openModal() {\n    modal.style.display = 'block';\n    document.body.style.overflow = 'hidden';\n  }\n  \n  function closeModal() {\n    modal.style.display = 'none';\n    document.body.style.overflow = 'auto';\n  }\n  \n  closeButton.addEventListener('click', closeModal);\n  \n  modal.addEventListener('click', function(event) {\n    if (event.target === modal) {\n      closeModal();\n    }\n  });\n  \n  document.addEventListener('keydown', function(event) {\n    if (event.key === 'Escape') {\n      closeModal();\n    }\n  });\n  \n  // Функція для оновлення вмісту модального вікна\n  function updateModal(book) {\n    const bookCover = modal.querySelector('.book-cover');\n    const bookTitle = modal.querySelector('.book-title');\n    const author = modal.querySelector('.author');\n    const description = modal.querySelector('.description');\n    const links = modal.querySelector('.links');\n    \n    bookCover.src = book.coverImageUrl;\n    bookTitle.textContent = book.title;\n    author.textContent = 'Author: ' + book.author;\n    description.textContent = book.description;\n    \n    // Очистити попередні посилання\n    links.innerHTML = '';\n    \n    // Додати посилання на торгові майданчики\n    book.links.forEach(function(link) {\n      const anchor = document.createElement('a');\n      anchor.href = link.url;\n      anchor.textContent = link.name;\n      anchor.target = '_blank';\n      links.appendChild(anchor);\n    });\n    \n    // Перевірка, чи книга вже є в кошику\n    const isInShoppingList = localStorageInstance.checkProduct(book.id).hasProd;\n    \n    if (isInShoppingList) {\n      addToCartButton.textContent = 'Remove from Shopping List';\n    } else {\n      addToCartButton.textContent = 'Add to Shopping List';\n    }\n  }\n  \n  // Пошук книги\n  const exampleBook = {\n    id: 1,\n    coverImageUrl: 'https://example.com/book-cover.jpg',\n    title: 'Example Book Title',\n    author: 'John Doe',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    links: [\n      { name: 'Amazon', url: 'https://www.amazon.com' },\n      { name: 'Apple Books', url: 'https://books.apple.com' }\n    ]\n  };\n  \n  updateModal(exampleBook);\n});","import * as header from './js/header.js';\nimport * as categories from './js/categories.js';\nimport * as supportUkraine from './js/support-ukraine';\nimport * as homePage from './js/homePage.js';\nimport * as category from './js/category.js'\nimport * as shoppingList from './js/shopping-list.js';\nimport * as menu from './js/menu.js';\nimport * as popUp from './js/pop-up.js';\n\n\n\n\n\n\n\n\n// Для тестування localStorage\nimport { LocalStorage } from './js/localStorage.js';\nconst localStorage = new LocalStorage();\n\nconst books = {\n  id: '1',\n  urlImg: '',\n  name: '',\n  category: '',\n  description: '',\n  author: '',\n  urlMarket: [] \n}\n\nconst a = localStorage.getProducts();\nconsole.log(a);\n\n\n\n// Для виклику сторінки Category\n// import loadBooksCategory from './js/category.js';\n// loadBooksCategory('Hardcover Fiction');\n"],"names":["theme","toggleTheme","el","event","axios","backendAPI","error","selected","id","categorySelectors","categoryMarkup","data","item","loadCategory","categoryName","categoryData","markup","renderBestBooks","bestBooksList","books","list_name","book_image","title","author","LocalStorage","productsLocalStorage","products","index","obj","hasProd","arrProd","modal","closeButton","addToCartButton","localStorageInstance","closeModal","updateModal","book","bookCover","bookTitle","description","links","link","anchor","localStorage","a"],"mappings":"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"}